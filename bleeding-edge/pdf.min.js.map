{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","arraysToBytes","arr","length","Uint8Array","resultLength","i","arrayByteLength","pos","data","item","stringToBytes","itemLength","byteLength","bytesToString","bytes","assert","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","Math","chunk","createObjectURL","contentType","forceDataSchema","URL","Blob","type","digits","buffer","ii","b1","b2","b3","createPromiseCapability","capability","Object","isSettled","get","Promise","resolve","reject","reason","createValidAbsoluteUrl","url","baseUrl","options","dots","tryConvertEncoding","stringToUTF8String","ex","absoluteUrl","_isValidProtocol","protocol","escapeString","str","replace","match","getModificationDate","date","Date","toString","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","msg","VerbosityLevel","INFOS","WorkerGlobalScope","self","console","Window","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","test","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","isString","objectFromMap","map","obj","key","value","objectSize","setVerbosityLevel","level","Number","string32","stringToPDFString","encoding","decoder","TextDecoder","fatal","warn","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","utf8StringToString","unescape","encodeURIComponent","__w_pdfjs_require__","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","NONE","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","NEED_PASSWORD","INCORRECT_PASSWORD","unreachable","Error","cond","shadow","prop","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","name","constructor","PasswordException","super","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","Util","static","r","g","b","m1","m2","p","m","d","p1","p2","p3","applyTransform","p4","transpose","a","c","first","second","sx","sy","rect","rect1","rect2","compare","orderedX","sort","orderedY","result","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","mt","j","jlen","decodeURIComponent","escape","_util","_display_utils","_font_loader","_node_utils","_annotation_storage","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_xfa_text","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","window","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DOMCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DOMCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","DOMStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","src","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","baseHref","params","rangeTransport","worker","href","location","Buffer","isNaN","docBaseUrl","isDataScheme","maxImageSize","useWorkerFetch","disableFontFace","useSystemFonts","ownerDocument","globalThis","document","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","then","workerId","messageHandler","MessageHandler","transport","WorkerTransport","async","pdfDataRangeTransport","cMapUrl","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","standardFontDataUrl","idCounters","doc","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","destroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","push","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","deprecated","fingerprints","stats","streamTypes","fontTypes","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","_annotationPromises","rotate","userUnit","view","getViewport","scale","rotation","offsetX","offsetY","dontFlip","PageViewport","viewBox","getAnnotations","intent","intentArgs","getRenderingIntent","cacheKey","renderingIntent","set","annotations","annotation","_jsActionsPromise","getPageJSActions","children","render","canvasContext","viewport","annotationMode","AnnotationMode","imageLayer","canvasFactory","background","backgroundColorToReplace","optionalContentConfigPromise","annotationCanvasMap","arguments","time","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","intentPrint","RenderingIntentFlag","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","timeEnd","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","sendWithStream","combineTextItems","highWaterMark","textContent","getTextContent","getXfa","xfa","XfaText","readableStream","reader","getReader","items","styles","pump","done","getStructTree","_structTreePromise","_destroy","waitOn","values","force","completed","cancel","clear","resetStats","StatTimer","_startRenderPage","_renderPageChunk","operatorListChunk","streamReader","RenderingCancelledException","setTimeout","curCacheKey","curIntentState","delete","LoopbackPort","_listeners","_deferred","postMessage","event","cloneValue","object","structuredClone","transfers","cloned","WeakMap","fallbackCloneValue","byteOffset","val","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","require","pdfjsFilePath","wrapper","_workerPorts","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","_mainThreadWorkerMessageHandler","workerSrc","terminateEarly","onWorkerError","_setupFakeWorker","sendTest","testObj","WorkerMessageHandler","workerHandler","has","_setupFakeWorkerGlobal","loader","mainWorkerMessageHandler","eval","loadScript","docStats","pageCache","pagePromises","metadataPromise","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","CMapReaderFactory","isCompressed","cMapPacked","StandardFontDataFactory","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","setupMessageHandler","AnnotationStorage","isOpList","lastModified","page","hasOwnProperty","resetModified","terminated","_getFieldObjectsPromise","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","evt","loaded","read","close","catch","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","end","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","fontRegistry","enabled","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","freeze","fetch","featureId","cachedPromise","serializable","filename","results","OptionalContentConfig","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","canvas","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","getFilenameFromUrl","anchor","query","getPdfFilenameFromUrl","defaultFilename","filenameForDownload","reFilename","splitURI","reURI","suggestedFilename","getXfaPageViewport","xfaPage","width","height","style","parseInt","isPdfFile","removeScriptElement","script","remove","head","documentElement","appendChild","_base_factory","PixelsPerInch","CSS","PDF","PDF_TO_CSS_UNITS","BaseCanvasFactory","_document","_createCanvas","createElement","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","ok","statusText","text","request","XMLHttpRequest","DONE","responseText","BaseCMapReaderFactory","_fetchData","cMapData","compressionType","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","clone","slice","convertToViewportPoint","x","y","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","applyInverseTransform","started","times","now","start","outBuf","longest","duration","pdfDateStringRegex","PDFDateString","input","RegExp","matches","year","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","create","context","reset","canvasAndContext","CMapCompressionType","svg","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","compiledGlyphs","translatedData","cssFontInfo","css","weight","fontWeight","italicAngle","FontFace","fontFamily","mimetype","getPathGenerator","character","cmds","jsBuf","current","args","__non_webpack_require__","fs","Canvas","process","nw","versions","electron","_storage","_timeStamp","_modified","onSetModified","onResetModified","getValue","radioButtonField","getFormValue","ngObj","fieldname","setValue","defaultValue","isDefaultValue","modified","entry","_setModified","setFormValue","radioValue","getAll","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","cache","getCanvas","canvasEntry","trackTransform","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","intersect","Infinity","getClippedPathBoundingBox","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","layerBox","layerOffsetX","layerOffsetY","layerWidth","layerHeight","genericComposeSMask","maskCtx","subtype","backdrop","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","chunkSize","row","chunkHeight","getImageSmoothingEnabled","interpolate","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","markedContentStack","cachedCanvases","cachedPatterns","viewportScale","outputScaleX","outputScaleY","_cachedGetSinglePixelWidth","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","executionStartIdx","argsArrayLen","chunkOperations","continueCallback","endTime","steps","fnId","OPS","depObjId","objsPool","drawImage","endLayout","_scaleImage","img","tmpCanvas","tmpCtx","widthScale","inverseTransform","heightScale","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","_createMaskCanvas","isPatternFill","maskCanvas","objToCanvas","maskToCanvas","cord1","cord2","normalizeRect","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","mozCurrentTransformInverse","inverse","lineCap","lineJoin","miterLimit","limit","dashArray","dashPhase","states","state","globalAlpha","globalCompositeOperation","checkSMaskState","inSMaskMode","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","mirrorContextOperations","_removeMirroring","bezierCurveTo","beginPath","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","__originalTransform","__originalSetTransform","__originalResetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","cp1x","cp1y","cp2x","cp2y","compose","dirtyBox","clearRect","startX","startY","ops","xw","yh","consumePath","getPattern","getSinglePixelWidth","draw","needRestore","paths","pendingTextPaths","path","spacing","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","showType3Text","glyphs","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","spacingLength","operatorListId","transformed","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","strokeStyle","matrix","getShadingPattern","SHADING","inv","bl","br","ul","ur","bbox","currentCtx","group","isolated","knockout","currentTransform","canvasBounds","scaleX","scaleY","groupCtx","startTransformInverse","imageSmoothingEnabled","currentMtx","getAxialAlignedBoundingBox","hasOwnCanvas","canvasWidth","canvasHeight","annotationCanvas","savedCtx","COMPILE_TYPE3_GLYPHS","compileType3Glyph","POINT_TYPES","width1","j0","points","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","position","getCanvasPosition","appendImage","left","top","visible","tag","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","RadialAxialShadingPattern","MeshShadingPattern","DummyShadingPattern","applyBoundingBox","Path2D","region","BaseShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","colorStop","ownerBBox","owner","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","boundsWidth","boundsHeight","combinedScale","paddedWidth","BORDER_SIZE","paddedHeight","backgroundColor","matrixScale","temporaryPatternCanvas","PaintType","MAX_PATTERN_SIZE","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","maxSize","realOutputSize","bboxWidth","bboxHeight","cssColor","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","streamController","_deleteStreamController","allSettled","metadataMap","parsedData","rawData","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","output","walk","node","child","_scripting_utils","_xfa_layer","DEFAULT_TAB_INDEX","GetElementsByNameSet","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","_fieldObjects","fieldObjects","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","titleObj","modificationDate","contentsObj","richText","hideWrapper","_renderQuadrilaterals","quadrilateral","className","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","platform","isWin","isMac","isTooltipOnly","resetForm","actions","Action","link","addLinkAttributes","newWindow","_bindNamedAction","_bindLink","hasClickAction","_bindJSAction","_bindResetFormAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","onclick","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","storage","allIds","valueAsString","Event","hasPopup","toLowerCase","JSON","alternativeText","title","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","_setBackgroundColor","_dispatchEventFromSandbox","setColor","styleName","ColorConverters","commonActions","display","hidden","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","storedData","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","readOnly","defaultFieldValue","blurListener","activeElement","selRange","selStart","selEnd","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","target","checkbox","curChecked","buttonValue","radio","emitMessage","pdfButtonValue","fieldvalue","fontSizeStyle","selectElement","combo","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","prototype","call","multipleSelection","selected","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","BACKGROUND_ENLIGHT","dir","dateObject","stringify","toLocaleDateString","toLocaleTimeString","contents","_formatContents","XfaLayer","xfaHtml","html","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","registerAcroformAnnotations","rendered","renderedElement","setAnnotationCanvasMap","ownMatrix","elements","ownTransform","firstChild","makeColorComp","G","components","RGB_HTML","CMYK_RGB","xfaOn","xfaOff","attributes","isHTMLAnchorElement","HTMLAnchorElement","dataId","setupStorage","rootHtml","setAttributes","stack","rootDiv","textDivs","parent","childHtml","xmlns","el","renderTextLayer","renderParameters","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","timeout","DEFAULT_FONT_SIZE","ascentCache","AllWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","_enhanceTextSelection","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontName","fontHeight","fontAscent","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","_textDivs","textDivsLength","findPositiveMin","ts","expand","_viewport","expanded","expandBounds","boxes","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","jj","boxScale","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","_processItems","len","classList","setAttribute","parentNode","_layoutText","measureText","fingerprintIsBlockedException","_render","styleCache","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","http","https","fileUriRegex","PDFNodeStream","parseUrl","sourceUrl","parsedUrl","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","stat","createReadStream","createResponseStatusError","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","err","quotindex","extvalue","encodingend","langvalue","charset","hex","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","_requestId","onClosed","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    if (typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope) {\n      console.log(`Info: ${msg}`);\n    } else if (Window && Window['ngxConsole']) {\n      Window['ngxConsole'].log(`Info: ${msg}`);\n    } else {\n      console.log(`Info: ${msg}`);\n    }\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    if (typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope) {\n      console.log(`Warning: ${msg}`);\n    } else if (Window && Window[\"ngxConsole\"]) {\n      Window[\"ngxConsole\"].log(`Warning: ${msg}`);\n    } else {\n      console.log(`Warning: ${msg}`);\n    }\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n    case \"capacitor\": // modified by ngx-extended-pdf-viewer #864\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const baseHref = src.baseHref;\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            // #929/#813 modified by ngx-extended-pdf-viewer\n            // to restore the drag'n'drop functionality\n            if (baseHref) {\n              params[key] = new URL(value, window.location.origin + baseHref).href;\n            } else {\n              params[key] = new URL(value, window.location).href;\n            }\n            // #929/#813 end of modification\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  // #376 modified by ngx-extended-pdf-viewer\n  let cMapUrl = source.cMapUrl;\n  if (cMapUrl.constructor.name === \"Function\") {\n    cMapUrl = cMapUrl();\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static get idCounters() {\n    return shadow(this, \"idCounters\", { doc: 0 });\n  }\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n\n      Object.defineProperty(this, \"getStats\", {\n        value: async () => {\n          deprecated(\n            \"`PDFDocumentProxy.getStats`, \" +\n              \"please use the `PDFDocumentProxy.stats`-getter instead.\"\n          );\n          return this.stats || { streamTypes: {}, fontTypes: {} };\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @type {PDFDocumentStats | null} The current statistics about document\n   *   structures, or `null` when no statistics exists.\n   */\n  get stats() {\n    return this._transport.stats;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap] - Map some\n *   annotation ids with canvases used to render them.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        promise = promise.then(annotations => {\n          for (const annotation of annotations) {\n            if (annotation.titleObj !== undefined) {\n              Object.defineProperty(annotation, \"title\", {\n                get() {\n                  deprecated(\n                    \"`title`-property on annotation, please use `titleObj` instead.\"\n                  );\n                  return annotation.titleObj.str;\n                },\n              });\n            }\n            if (annotation.contentsObj !== undefined) {\n              Object.defineProperty(annotation, \"contents\", {\n                get() {\n                  deprecated(\n                    \"`contents`-property on annotation, please use `contentsObj` instead.\"\n                  );\n                  return annotation.contentsObj.str;\n                },\n              });\n            }\n          }\n          return annotations;\n        });\n      }\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    backgroundColorToReplace = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n        backgroundColorToReplace,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    // #645 modified by ngx-extended-pdf-viewer\n    if (!this._tryCleanup(resetStats)) {\n      this.cleanupAfterRender = true;\n    }\n    return true;\n    // #645 end of modification\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the Window['ngxConsole'].\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve();\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(object) {\n      if (\n        (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        globalThis.structuredClone\n      ) {\n        return globalThis.structuredClone(object, transfers);\n      }\n\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      function fallbackCloneValue(value) {\n        if (\n          typeof value === \"function\" ||\n          typeof value === \"symbol\" ||\n          value instanceof URL\n        ) {\n          throw new Error(\n            `LoopbackPort.postMessage - cannot clone: ${value?.toString()}`\n          );\n        }\n\n        if (typeof value !== \"object\" || value === null) {\n          return value;\n        }\n        if (cloned.has(value)) {\n          // already cloned the object\n          return cloned.get(value);\n        }\n        let buffer, result;\n        if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n          // We found object with ArrayBuffer (typed array).\n          if (transfers?.includes(buffer)) {\n            result = new value.constructor(\n              buffer,\n              value.byteOffset,\n              value.byteLength\n            );\n          } else {\n            result = new value.constructor(value);\n          }\n          cloned.set(value, result);\n          return result;\n        }\n        if (value instanceof Map) {\n          result = new Map();\n          cloned.set(value, result); // Adding to cache now for cyclic references.\n          for (const [key, val] of value) {\n            result.set(key, fallbackCloneValue(val));\n          }\n          return result;\n        }\n        if (value instanceof Set) {\n          result = new Set();\n          cloned.set(value, result); // Adding to cache now for cyclic references.\n          for (const val of value) {\n            result.add(fallbackCloneValue(val));\n          }\n          return result;\n        }\n        result = Array.isArray(value) ? [] : Object.create(null);\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        // Cloning all value and object properties, however ignoring properties\n        // defined via getter.\n        for (const i in value) {\n          let desc,\n            p = value;\n          while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n            p = Object.getPrototypeOf(p);\n          }\n          if (typeof desc.value === \"undefined\") {\n            continue;\n          }\n          if (typeof desc.value === \"function\") {\n            if (i === 'cMapUrl') {\n              result[i] = cloneValue(desc.value());\n            } else if (!value.hasOwnProperty?.(i)) {\n              continue;\n            }\n          }\n          result[i] = fallbackCloneValue(desc.value);\n        }\n        return result;\n      }\n\n      const cloned = new WeakMap();\n      return fallbackCloneValue(object);\n    }\n\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static get _workerPorts() {\n    return shadow(this, \"_workerPorts\", new WeakMap());\n  }\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker._workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker._workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array([255]);\n          // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n          // typed array. Also, checking if we can use transfers.\n          try {\n            messageHandler.send(\"test\", testObj, [testObj.buffer]);\n          } catch (ex) {\n            warn(\"Cannot use postMessage transfers.\");\n            testObj[0] = 0;\n            messageHandler.send(\"test\", testObj);\n          }\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker._workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this._workerPorts.has(params.port)) {\n      return this._workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  #docStats = null;\n\n  #pageCache = new Map();\n\n  #pagePromises = new Map();\n\n  #metadataPromise = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      // modified by ngx-extended-pdf-viewer #376\n\t  let cMapUrl = params.cMapUrl;\n\t  if (cMapUrl.constructor.name === \"Function\") {\n\t    cMapUrl = cMapUrl();\n\t  }\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  get stats() {\n    return this.#docStats;\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let lastModified = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        lastModified = this.annotationStorage.lastModified;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${lastModified}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#metadataPromise = null;\n      this._getFieldObjectsPromise = null;\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\"DocStats\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      // Ensure that a `PDFDocumentProxy.stats` call-site cannot accidentally\n      // modify this internal data.\n      this.#docStats = Object.freeze({\n        streamTypes: Object.freeze(data.streamTypes),\n        fontTypes: Object.freeze(data.fontTypes),\n      });\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    this.loadingTask.onUnsupportedFeature?.(featureId);\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.#pageCache.set(pageIndex, page);\n        return page;\n      });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      ref,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return (this._getFieldObjectsPromise ||=\n      this.messageHandler.sendWithPromise(\"GetFieldObjects\", null));\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return (this.#metadataPromise ||= this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      }));\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(\n          `startCleanup: Page ${page.pageNumber} is currently rendering.`\n        );\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#metadataPromise = null;\n    this._getFieldObjectsPromise = null;\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      enableXfa: params.enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static get canvasInUse() {\n    return shadow(this, \"canvasInUse\", new WeakSet());\n  }\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background, backgroundColorToReplace} =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig,\n      this.annotationCanvasMap\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n      backgroundColorToReplace,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    window.ngxZone.runOutsideAngular(() => {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this._cancelBound);\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n      }\n    });\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  RenderTask,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\nimport {\n  BaseException,\n  isString,\n  shadow,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nconst PixelsPerInch = {\n  CSS: 96.0,\n  PDF: 72.0,\n\n  /** @type {number} */\n  get PDF_TO_CSS_UNITS() {\n    return shadow(this, \"PDF_TO_CSS_UNITS\", this.CSS / this.PDF);\n  },\n};\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  // modified by ngx-extended-pdf-viewer\n  if (window.PDFViewerApplication.appConfig.filenameForDownload) {\n    return window.PDFViewerApplication.appConfig.filenameForDownload;\n  }\n  // end of modification by ngx-extended-pdf-viewer\n\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    // modified by ngx-extended-pdf-viewer #864\n    return protocol === \"http:\" || protocol === \"https:\" || protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function (error) {\n      Window['ngxConsole'].log(error);\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  Window['ngxConsole'].log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        div.remove();\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._timeStamp = Date.now();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  getValue(key, fieldname, defaultValue, radioButtonField = undefined) {\n    let obj = this._storage.get(key);\n    if (obj === undefined) {\n      if (window.getFormValue) {\n        window.assignFormIdAndFieldName(key, fieldname, radioButtonField);\n        // necessary because radio buttons don't have a reference to their field\n        const ngObj = window.getFormValue(fieldname);\n        if (ngObj !== undefined && ngObj.value !== undefined) {\n          if (radioButtonField) {\n            const value = { value: ngObj.value === radioButtonField };\n            obj = value;\n          } else {\n            obj = ngObj;\n          }\n          // ngx-extended-pdf-viewer #1054 consider values from\n          // window.getFormValues as default value\n          this.setValue(key, undefined, obj, undefined, true); // second parameter is undefined to prevent infinite loops\n        }\n        if (obj === undefined && defaultValue !== undefined && defaultValue.value !== undefined && defaultValue.value !== \"\") {\n          // send the pre-filled form value to Angular via (formDataChange)\n          if (radioButtonField) {\n            if (defaultValue.value) {\n              window.setFormValue(fieldname, radioButtonField);\n            }\n          } else {\n            window.setFormValue(fieldname, defaultValue.value);\n          }\n        }\n      }\n    }\n    // #718 end of modification by ngx-extended-pdf-viewer\n    if (obj === undefined) {\n      return defaultValue;\n    }\n    return Object.assign(defaultValue, obj);\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} value\n   */\n  // #718, #1054 modified by ngx-extended-pdf-viewer\n  setValue(key, fieldname, value, radioButtonField = undefined, isDefaultValue = false) {\n    // #718 end of modification by ngx-extended-pdf-viewer\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (\n          entry !== \"radioValue\" && // #718 modified by ngx-extended-pdf-viewer\n          entry !== \"emitMessage\" && // #718 modified by ngx-extended-pdf-viewer\n          obj[entry] !== val\n        ) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      // #1054 modified by ngx-extended-pdf-viewer\n      if (!isDefaultValue) {\n        modified = true;\n      }\n      // #1054 end of modification by ngx-extended-pdf-viewer\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._timeStamp = Date.now();\n      this._setModified();\n      // #718 modified by ngx-extended-pdf-viewer\n      if (fieldname || radioButtonField) {\n        if (window.setFormValue) {\n          if (value.items) {\n            window.setFormValue(fieldname, value.items);\n          } else if (value.emitMessage === false) {\n            // ignore this field\n          } else if (value.radioValue) {\n            window.setFormValue(fieldname, value.radioValue);\n          } else {\n            for (const val of Object.values(value)) {\n              window.setFormValue(fieldname, val);\n            }\n          }\n        }\n      }\n      // #718 end of modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get lastModified() {\n    return this._timeStamp.toString();\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { PixelsPerInch } from \"./display_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and shedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = null;\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    this.updatePathMinMax(transform, box[0], box[1]);\n    this.updatePathMinMax(transform, box[2], box[3]);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n    let destPos = 3; // alpha component offset\n    for (let j = 0; j < thisChunkHeight; j++) {\n      let elem,\n        mask = 0;\n      for (let k = 0; k < width; k++) {\n        if (!mask) {\n          elem = src[srcPos++];\n          mask = 128;\n        }\n        dest[destPos] = elem & mask ? 0 : 255;\n        destPos += 4;\n        mask >>= 1;\n      }\n    }\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = \"#000000\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig,\n    annotationCanvasMap\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null, // #916 modified by ngx-extended-pdf-viewer\n    backgroundColorToReplace = null, // #916 modified by ngx-extended-pdf-viewer\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    this.ctx.save();\n    // #916 modified by ngx-extended-pdf-viewer\n    if (typeof background === \"function\") {\n      background({ context: this.ctx, width, height });\n    } else {\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.background = background;\n    }\n    // #916 end of modification by ngx-extended-pdf-viewer\n    this.ctx.restore();\n    this.backgroundColorToReplace = backgroundColorToReplace;\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n    this._combinedScaleFactor = Math.hypot(\n      this.baseTransform[0],\n      this.baseTransform[2]\n    );\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n//        console.log(this[fnId].toString().split(\"\\n\")[0]); // useful for debugging\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.current.activeSMask !== null) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const maskCanvas = this.cachedCanvases.getCanvas(\n      \"maskCanvas\",\n      width,\n      height\n    );\n    const maskCtx = maskCanvas.context;\n    putBinaryImageMask(maskCtx, img);\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n    const objToCanvas = ctx.mozCurrentTransform;\n    let maskToCanvas = Util.transform(objToCanvas, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.ceil(rect[2] - rect[0]);\n    const drawnHeight = Math.ceil(rect[3] - rect[1]);\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const fillCtx = fillCanvas.context;\n    // The offset will be the top-left cordinate mask.\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n    // Pre-scale if needed to improve image smoothing.\n    const scaled = this._scaleImage(\n      maskCanvas.canvas,\n      fillCtx.mozCurrentTransformInverse\n    );\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      fillCtx.mozCurrentTransform,\n      img.interpolate\n    );\n    fillCtx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.img.width,\n      scaled.img.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = !!this.suspendedCtx;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.suspendedCtx) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.suspendedCtx) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.current.activeSMask = null;\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    this.ctx.save();\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.current.activeSMask) {\n      this.endSMaskMode();\n    }\n\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      this.ctx.restore();\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, xw, yh);\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const lineWidth = this.getSinglePixelWidth();\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse,\n          PathType.STROKE\n        );\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        const lineWidth = this.getSinglePixelWidth();\n        if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n          // The current transform will transform a square pixel into a\n          // parallelogram where both heights are lower than 1 and not equal.\n          ctx.save();\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n        }\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    // #916 modified by ngx-extended-pdf-viewer\n    let draw = true;\n    let fillColor = this.current.fillColor;\n\n    if (this.backgroundColorToReplace) {\n      if (fillColor === this.backgroundColorToReplace) {\n        if (this.background && typeof this.background !== 'function') {\n          fillColor = this.background;\n        } else {\n          // do not draw the color\n          draw = false;\n        }\n      }\n    }\n    // #916 end of modification by ngx-extended-pdf-viewer\n\n\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    // #916 modified by ngx-extended-pdf-viewer\n    if (draw) {\n      if (this.contentVisible && intersect !== null) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n      // #916 end of modification by ngx-extended-pdf-viewer\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.save();\n          ctx.moveTo(x, y);\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.strokeText(character, 0, 0);\n          ctx.restore();\n        } else {\n          ctx.strokeText(character, x, y);\n        }\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    let resetLineWidthToOne = false;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        this._cachedGetSinglePixelWidth = null;\n        lineWidth = this.getSinglePixelWidth();\n        resetLineWidthToOne = lineWidth < 0;\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (isNum(glyph)) {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(\n            character,\n            scaledX,\n            scaledY,\n            patternTransform,\n            resetLineWidthToOne\n          );\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (isNum(glyph)) {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    // #916 modified by ngx-extended-pdf-viewer\n    let color = Util.makeHexColor(r, g, b);\n    if (this.backgroundColorToReplace) {\n      if (color === this.backgroundColorToReplace) {\n        if (this.background && typeof this.background !== 'function') {\n          color = this.background;\n        } else {\n          // let's hope the fill() function is called,\n          // because it checks whether the color is to be rendered\n\t\t  // this.ctx.globalAlpha = 0; // old approach with side effects\n        }\n      }\n    }\n    // #916 end of modification by ngx-extended-pdf-viewer\n\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.objs.get(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      PathType.SHADING\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[0],\n        bbox[1]\n      );\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[2],\n        bbox[3]\n      );\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    const suspendedCtx = this.suspendedCtx;\n    if (this.current.activeSMask) {\n      this.suspendedCtx = null;\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push({\n      ctx: currentCtx,\n      suspendedCtx,\n    });\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const { ctx, suspendedCtx } = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (suspendedCtx) {\n      this.suspendedCtx = suspendedCtx;\n    }\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = this.ctx.mozCurrentTransform;\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform.apply(this.ctx, currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    this.save();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          this.ctx.mozCurrentTransform\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        canvas.style.width = `calc(${width}px * var(--viewport-scale-factor))`;\n        canvas.style.height = `calc(${height}px * var(--viewport-scale-factor))`;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n        addContextCurrentTransform(this.ctx);\n\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n\n    const glyph = this.processingType3;\n\n    if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n      if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n        glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n      } else {\n        glyph.compiled = null;\n      }\n    }\n\n    if (glyph?.compiled) {\n      glyph.compiled(ctx);\n      return;\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    imgData,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(imgData);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      ctx.mozCurrentTransform,\n      imgData.interpolate\n    );\n    ctx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: width / ctx.mozCurrentTransformInverse[0],\n        height: height / ctx.mozCurrentTransformInverse[3],\n      });\n    }\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (this.pendingClip === EO_CLIP) {\n        ctx.clip(\"evenodd\");\n      } else {\n        ctx.clip();\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (this._cachedGetSinglePixelWidth === null) {\n      // If transform is [a b] then a pixel (square) is transformed\n      //                 [c d]\n      // into a parallelogram: its area is the abs value of the determinant.\n      // This parallelogram has 2 heights:\n      //  - Area / |col_1|;\n      //  - Area / |col_2|.\n      // so in order to get a height of at least 1, pixel height\n      // must be computed as followed:\n      //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n      // This is equivalent to:\n      //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n      const m = this.ctx.mozCurrentTransform;\n\n      const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n      const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n      const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n      const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n      if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n        // The parallelogram isn't a square and at least one height\n        // is lower than 1 so the resulting line width must be 1\n        // but it cannot be achieved with one scale: when scaling a pixel\n        // we'll get a rectangle (see issue #12295).\n        // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n        // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n        // then we'll get a rectangle 1x1e5 which is wrong.\n        // In this case, we must reset the transform, set linewidth to 1\n        // and then stroke.\n        this._cachedGetSinglePixelWidth = -(\n          this._combinedScaleFactor * pixelHeight\n        );\n      } else if (absDet > Number.EPSILON) {\n        this._cachedGetSinglePixelWidth = pixelHeight;\n      } else {\n        // Matrix is non-invertible.\n        this._cachedGetSinglePixelWidth = 1;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        ctx.mozCurrentTransform\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform.apply(tmpCtx, this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  warn,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      throw new Error(\n        'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n      );\n    }\n    warn('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n    return reason;\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this.comObj.postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          comObj.postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull && streamSink.onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(\n            streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason))\n          );\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall && streamController.startCall.promise,\n      streamController.pullCall && streamController.pullCall.promise,\n      streamController.cancelCall && streamController.cancelCall.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst GetElementsByNameSet = new WeakSet();\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPageProxy} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (data.hasOwnCanvas) {\n      const transform = viewport.transform.slice();\n      const [scaleX, scaleY] = Util.singularValueDecompose2dScale(transform);\n      width = Math.ceil(width * scaleX);\n      height = Math.ceil(height * scaleY);\n      rect[0] *= scaleX;\n      rect[1] *= scaleY;\n      // Reset the scale part of the transform matrix (which must be diagonal\n      // or anti-diagonal) in order to avoid to rescale the canvas.\n      // The canvas for the annotation is correctly scaled when it is drawn\n      // (see `beginAnnotation` in canvas.js).\n      for (let i = 0; i < 4; i++) {\n        transform[i] = Math.sign(transform[i]);\n      }\n      container.style.transform = `matrix(${transform.join(\",\")})`;\n    } else {\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    }\n\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || data.color || null;\n      if (borderColor) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n\n    if (data.hasOwnCanvas) {\n      container.style.width = container.style.height = \"auto\";\n    } else {\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n    }\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      titleObj: data.titleObj,\n      modificationDate: data.modificationDate,\n      contentsObj: data.contentsObj,\n      richText: data.richText,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.getElementById(id);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { id, exportValue } = domElement;\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      parameters.data.resetForm ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"LinkAnnotationElement.render - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(link, data.url, data.newWindow);\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else {\n      let hasClickAction = false;\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        hasClickAction = true;\n        this._bindJSAction(link, data);\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n      } else if (!hasClickAction) {\n        this._bindLink(link, \"\");\n      }\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    link.className = \"internalLink\";\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    link.className = \"internalLink\";\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      if (otherClickAction) {\n        otherClickAction();\n      }\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value, valueAsString: value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n        const domElement = document.getElementById(id);\n        if (!domElement || !GetElementsByNameSet.has(domElement)) {\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id,  this.data.fieldName, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      GetElementsByNameSet.add(element);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: event.target.value,\n        });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue || \"\";\n        element.value = elementData.userValue = defaultValue;\n        delete elementData.formattedValue;\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                value: elementData.userValue.toString(),\n              });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, `${this.data.fieldName}/${this.data.exportValue}`, { // #718 modified by ngx-extended-pdf-viewer\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, this.data.fieldName, { value }); // #868 modified by ngx-extended-pdf-viewer\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id,\n          this.data.fieldName, // #718 modified by ngx-extended-pdf-viewer\n          { value: curChecked });\n      }\n      storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: checked\n      });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: event.target.checked\n            });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(\n      id,\n      this.data.fieldName,\n      {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: data.fieldValue === data.buttonValue,\n      },\n      this.data.buttonValue // #718 modified by ngx-extended-pdf-viewer\n    ).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, this.data.fieldName, { value }, this.data.buttonValue);  // #718 modified by ngx-extended-pdf-viewer\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, this.data.fieldName, {\n          value: false,\n          emitMessage: false, // #718 modified by ngx-extended-pdf-viewer\n        });\n      }\n      storage.setValue(id, this.data.fieldName, {\n        value: checked,\n        radioValue: this.data.buttonValue, // #718 modified by ngx-extended-pdf-viewer\n      });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(\n                radio.id,\n                fieldName, // #718 / #868 modified by ngx-extended-pdf-viewer\n                { value: curChecked }\n              );\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    const fieldvalue = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    }).value; // #718 modified by ngx-extended-pdf-viewer\n\n    this.data.fieldValue = fieldvalue; // #718 modified by ngx-extended-pdf-viewer\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value(event) {\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: null,\n              items: [],\n            });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, this.data.fieldName, { value: exportValue }); // #718 modified by ngx-extended-pdf-viewer\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", event => { // #718 modified by ngx-extended-pdf-viewer\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: getValue(event),\n          radioValue: getValue(event, true), // #718 modified by ngx-extended-pdf-viewer\n        });\n      });\n    }\n\n    this._setBackgroundColor(selectElement);\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.titleObj = parameters.titleObj;\n    this.modificationDate = parameters.modificationDate;\n    this.contentsObj = parameters.contentsObj;\n    this.richText = parameters.richText;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.dir = this.titleObj.dir;\n    title.textContent = this.titleObj.str;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.className = \"popupDate\";\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    if (\n      this.richText?.str &&\n      (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)\n    ) {\n      XfaLayer.render({\n        xfaHtml: this.richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.className = \"richText popupContent\";\n    } else {\n      const contents = this._formatContents(this.contentsObj);\n      popup.appendChild(contents);\n    }\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.className = \"popupContent\";\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (\n      !this.data.hasPopup &&\n      (this.data.titleObj?.str ||\n        this.data.contentsObj?.str ||\n        this.data.richText)\n    ) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPageProxy} page\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    // #958 modified by ngx-extended-pdf-viewer\n    if (window.registerAcroformAnnotations) {\n      window.registerAcroformAnnotations(sortedAnnotations);\n    }\n    // #958 end of modification by ngx-extended-pdf-viewer\n\n    const div = parameters.div;\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        fieldObjects: parameters.fieldObjects,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            div.prepend(rendered);\n          } else {\n            div.appendChild(rendered);\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const { page, viewport, annotations, annotationCanvasMap, div } =\n      parameters;\n    const transform = viewport.transform;\n    const matrix = `matrix(${transform.join(\",\")})`;\n\n    let scale, ownMatrix;\n    for (const data of annotations) {\n      const elements = div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          if (data.hasOwnCanvas) {\n            const rect = Util.normalizeRect([\n              data.rect[0],\n              page.view[3] - data.rect[1] + page.view[1],\n              data.rect[2],\n              page.view[3] - data.rect[3] + page.view[1],\n            ]);\n\n            if (!ownMatrix) {\n              // When an annotation has its own canvas, then\n              // the scale has been already applied to the canvas,\n              // so we musn't scale it twice.\n              scale = Math.abs(transform[0] || transform[1]);\n              const ownTransform = transform.slice();\n              for (let i = 0; i < 4; i++) {\n                ownTransform[i] = Math.sign(ownTransform[i]);\n              }\n              ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n            }\n\n            const left = rect[0] * scale;\n            const top = rect[1] * scale;\n            element.style.left = `${left}px`;\n            element.style.top = `${top}px`;\n            element.style.transformOrigin = `${-left}px ${-top}px`;\n            element.style.transform = ownMatrix;\n          } else {\n            element.style.transform = matrix;\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n    div.hidden = false;\n  }\n\n  static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n    if (!annotationCanvasMap) {\n      return;\n    }\n    for (const [id, canvas] of annotationCanvasMap) {\n      const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (firstChild.nodeName === \"CANVAS\") {\n        element.replaceChild(canvas, firstChild);\n      } else {\n        element.insertBefore(canvas, firstChild);\n      }\n    }\n    annotationCanvasMap.clear();\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { warn } from \"../shared/util.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\n/**\n * @typedef {Object} XfaLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Object} xfaHtml\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {string} [intent] - (default value is 'display').\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n        } else {\n          if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n            continue; // Handled below.\n          }\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"XfaLayer.setAttribute - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  /**\n   * Render the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection\n    ? {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1,\n      }\n    : {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n      };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (!this._enhanceTextSelection) {\n          // The `textDiv` properties are no longer needed.\n          this._textDivProperties = null;\n        }\n\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the Window['ngxConsole'].\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the Window['ngxConsole'].\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          const scale = textDivProperties.canvasWidth / width;\n          if (this._enhanceTextSelection) {\n            textDivProperties.scale = scale;\n          }\n          transform = `scaleX(${scale})`;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      if (typeof args === \"string\") {\n        args = this.objs.get(args);\n      }\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      // modified by ngx-extended-pdf-viewer #864\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\" || this.url.protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  AnnotationLayer,\n  AnnotationMode,\n  build,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  GlobalWorkerOptions,\n  InvalidPDFException,\n  isPdfFile,\n  loadScript,\n  LoopbackPort,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PDFDataRangeTransport,\n  PDFDateString,\n  PDFWorker,\n  PermissionFlag,\n  PixelsPerInch,\n  RenderingCancelledException,\n  renderTextLayer,\n  shadow,\n  SVGGraphics,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  version,\n  XfaLayer,\n};\n"]}